#include <iostream>
#include <fstream>
#include <string>
#include <locale>
#include <codecvt>
#include "rapidjson/document.h"

using namespace std;

int main() {
    string content;
    char ch;

    // Установите нужную локаль (кодировку)
    setlocale(LC_CTYPE, ".UTF8");

    ifstream in("test.txt");
    in.imbue(locale(in.getloc(), new codecvt_utf8<char>)); // Используйте char, чтобы читать как байты

    if (in.is_open()) {
        while (in.get(ch)) {
            content += ch;
        }
    }
    in.close();

    // Ваша переменная wstring, содержащая JSON с символами Unicode и экранированными обратными слешами.
    std::wstring jsonStr = L"{\"path\":\"D:\\\\Новая папка\"}";

    // Преобразуйте wstring в UTF-8 (std::string), так как RapidJSON работает с UTF-8.
    std::string utf8JsonStr(jsonStr.begin(), jsonStr.end());

    typedef rapidjson::GenericDocument<rapidjson::UTF16<> > WDocument;
    // Создайте парсер RapidJSON для разбора JSON.
    WDocument document;
    document.Parse(jsonStr.c_str());

    // Проверьте наличие ошибок при разборе JSON.
    if (document.HasParseError()) {
        // Обработка ошибок разбора.
        std::cerr << "Ошибка разбора JSON: " << std::endl;
    }
    else {
        // JSON успешно разобран. Можно обращаться к данным.
        if (document.HasMember(L"path") && document[L"path"].IsString()) {
            std::wstring path = document[L"path"].GetString();
            if (path == L"D:\\Новая папка") {
                int s = 1;
            }
        }
    }

    return 0;
}